openapi: 3.0.0
info:
  title: Rest Web Service
  description:
    A simple service that allows CRUD operations for a console Inventory system.
  version: 0.0.1
servers:
  - url: 'http://localhost:8080'
    description: Local dev server
paths:
  /consoles:
    post:
      summary: Creates a new console entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/console'
      responses:
        '201':
          description: A console object created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/console'
        '400':
          description: Invalid request syntax.
          
    get:
      summary: Retrieves a list of consoles
      responses:
        '200':
          description: A JSON array of consoles
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string

  /console/manufacturer/{manufacturer}:
    get:
      summary: Retrieves the entry for the console with the given manufacturer.
      parameters: 
        - name: manufacturer
          in: path
          required: true
          description: manufacturer of the tshirt to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: console object matching given manufacturer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/console'                   
      
          
  /console{consoleId}:
    # GET, DELETE, and PUT are all under this path entry
    get:
      summary: Retrieves the entry for the console with the given ID.
      parameters: 
        - name: consoleId
          in: path
          required: true
          description: ID of the console to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: console object matching given ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/console'
      
    delete:
      summary: Deletes the entry for the console with the given ID.
      parameters: 
        - name: consoleId
          in: path
          required: true
          description: ID of the console you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: console successfully deleted.
          
    put:
      summary: Updated the entry for the console with the given ID.
      parameters: 
        - name: consoleId
          in: path
          required: true
          description: ID of the console you would like to update.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/console'
      responses:
        '200':
          description: console successfully updated.
        '422':
          description: console ID on path mush match the ID in the console object.
          
  /game:
    post:
      summary: Creates a new game entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/game'
      responses:
        '201':
          description: An game object successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete game information. Some required fields missing.
          
    get:
      summary: Retrieves a list of consoles
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string

  /game/studio/{studio}:
    get:
      summary: Retrieves the entry for the game with the given studio.
      parameters: 
        - name: studio
          in: path
          required: true
          description: studio of the game to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: game object matching given studio.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game' 

  /game/title/{title}:
    get:
      summary: Retrieves the entry for the game with the given title.
      parameters: 
        - name: title
          in: path
          required: true
          description: title of the game to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: game object matching given title.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game' 

  /game/rating/{rating}:
    get:
      summary: Retrieves the entry for the game with the given rating.
      parameters: 
        - name: rating
          in: path
          required: true
          description: rating of the game to retrieve.
          schema:
            type: string
      responses:
        '200':
          description: game object matching given rating.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game'                                                   
          
  /game{gameId}:
    # GET, DELETE, and PUT are all under this path entry
    get:
      summary: Retrieves the entry for the game with the give ID.
      parameters: 
        - name: gameId
          in: path
          required: true
          description: ID of the game to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: game object matching given ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/game'
      
    delete:
      summary: Deletes the entry for the game with the given ID.
      parameters: 
        - name: gameId
          in: path
          required: true
          description: ID of the game you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: game successfully deleted.
          
    put:
      summary: Updated the entry for the game with the given ID.
      parameters: 
        - name: gameId
          in: path
          required: true
          description: ID of the game you would like to update.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/game'
      responses:
        '200':
          description: game successfully updated.
        '422':
          description: game ID on path mush match the ID in the game object.
          
  /invoice:
    post:
      summary: Creates a new Invoice entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/invoice'
      responses:
        '201':
          description: An invoice object created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoice'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete invoice information. Some required fields missing.
          
  /tshirt:
    post:
      summary: Creates a new Tshirt entry with the given information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tshirt'
      responses:
        '201':
          description: An Tshirt object created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tshirt'
        '400':
          description: Invalid request syntax.
        '422':
          description: Incomplete Tshirt information. Some required fields missing.
    get:
      summary: Retrieves a list of consoles
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: string

  /tshirt/color/{color}:
    get:
      summary: Retrieves the entry for the tshirt with the give color.
      parameters: 
        - name: color
          in: path
          required: true
          description: color of the tshirt to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: tshirt object matching given color.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tshirt' 

  /tshirt/size/{size}:
    get:
      summary: Retrieves the entry for the tshirt with the give size.
      parameters: 
        - name: size
          in: path
          required: true
          description: size of the tshirt to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: tshirt object matching given size.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tshirt'                                  
          
  /tshirt{tshirtId}:
    # GET, DELETE, and PUT are all under this path entry
    get:
      summary: Retrieves the entry for the tshirt with the give ID.
      parameters: 
        - name: tshirtId
          in: path
          required: true
          description: ID of the tshirt to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: tshirt object matching given ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tshirt'
      
    delete:
      summary: Deletes the entry for the game with the given ID.
      parameters: 
        - name: tshirtId
          in: path
          required: true
          description: ID of the tshirt you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: tshirt successfully deleted.
          
    put:
      summary: Updated the entry for the tshirt with the given ID.
      parameters: 
        - name: tshirtId
          in: path
          required: true
          description: ID of the tshirt you would like to update.
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tshirt'
      responses:
        '200':
          description: tshirt successfully updated.
          
  /invoice{invoiceId}:
    get:
      summary: Retrieves the entry for the invoice with the give ID.
      parameters: 
        - name: invoicetId
          in: path
          required: true
          description: ID of the invoice to retrieve.
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: invoice object matching given ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invoice'

    delete:
      summary: Deletes the entry for the invoice with the given ID.
      parameters: 
        - name: invoiceId
          in: path
          required: true
          description: ID of the invoice you would like to delete.
          schema:
            type: integer
            format: int64
            minimum: 1
            
      responses:
        '200':
          description: Invoice successfully deleted
        
          
components:
  schemas:
    game:
      properties:
        id:
          type: integer
        title:
          type: string
        esrbRating:
          type: string
        description:
          type: string
        price:
          type: integer
        studio:
          type: string
        quantity:
          type: integer
      required: 
        - title
        - esrbRating
        - description
        - price
        - studio
        - quantity
    
    console:
      properties:
        id:
          type: integer
        model:
          type: string
        manufacturer:
          type: string
        memoryAmount:
          type: string
        processor:
          type: string
        price:
          type: integer
        quantity:
          type: integer
      required: 
        - model
        - manufacturer
        - memoryAmount
        - processor
        - price
        - quantity
        
    invoice:
      properties:
        id:
          type: integer
        name:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        zipcode:
          type: string
        itemType:
          type: string
        itemId:
          type: integer
        unitPrice:
          type: integer
        quantity:
          type: integer
        subtotal:
          type: integer
        tax:
          type: integer
        processingFee:
          type: integer
        total:
          type: integer
          
    tshirt:
      properties:
        id:
          type: integer
        size:
          type: string
        color:
          type: string
        description:
          type: string
        price:
          type: integer
        quantity:
          type: integer
